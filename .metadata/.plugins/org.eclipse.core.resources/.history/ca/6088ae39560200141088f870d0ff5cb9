package edu.wpi.guanxiong;

import java.util.Iterator;

public class RandomizedQueue<Item> implements Iterable<Item>
{
	private Item[] data;
	private int capacity = 1;
	private int size;
	
	public RandomizedQueue() // construct an empty randomized queue
	{
		this.data = (Item []) new Object [capacity];
		this.size = 0;
	}

	public boolean isEmpty() // is the queue empty?
	{
		return this.size == 0;
	}

	public int size() // return the number of items on the queue
	{
		return this.size;
	}

	public void enqueue(Item item) // add the item
	{
		this.data [this.size] = item;
		this.size++;
	}

	public Item dequeue() // delete and return a random item
	{
		return null;
	}

	public Item sample() // return (but do not delete) a random item
	{
		return null;
	}

	public Iterator<Item> iterator() // return an independent iterator over items in random order
	{
		return null;
	}

	private class ListIterator implements Iterator
	{

		@Override
		public boolean hasNext()
		{
			// TODO Auto-generated method stub
			return false;
		}

		@Override
		public Object next()
		{
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public void remove()
		{
			// TODO Auto-generated method stub

		}
	}

	public static void main(String[] args) // unit testing
	{
	}
}
